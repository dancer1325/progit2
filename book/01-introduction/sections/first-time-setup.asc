[[_first_time]]
=== First-Time Git Setup

* goal
    ** customize your Git environment
        *** recommendations
            **** do it 1! | your computer == stick between upgrades
        *** ways
            **** statically | a file
            **** dynamically -- through -- the commands

* `git config`
    ** := tool /
        *** allows, about configuration variables,
            **** getting them
            **** set them
    ** `git config --list --show-origin`
        *** view ALL your settings / indicate where they come from

* configuration variables
    ** control how Git looks & operates
    ** can be stored | 3 different places / ordered from lower to higher priority
        *** `[path]/etc/gitconfig`
            **** system configuration file -> you need admin rights
            **** 👁️ -- apply to -- EVERY user | system & ALL their repositories 👁️
            **** `--system` | `git config` command -> reads and writes -- from -- this file specifically
            **** if Windows -> Git looks for it | MSys root
        *** `~/.gitconfig` or `~/.config/git/config`
            **** 👁️ -- apply specifically to -- your user & ALL your repositories 👁️
            **** `--global` | `git config` command -> reads and writes -- from -- this file specifically
            **** if Windows -> Git looks for it | `$HOME` (== `C:\Users\$USER` -- for most of -- Windows users)
        *** `.git/config` | specific Git directory
            **** 👁️-- apply to -- 1! specific Git repository 👁️
                ***** == used by ANYTHING / you do | your computer
            **** `--local` | `git config` command -> reads and writes -- from -- this file specifically
                ***** default -> NOT necessary to pass it to the command
                ***** -> you need to run the command | specific Git repository
        *** specific system-level config file | Windows & Git v2.x
            **** `C:\Documents and Settings\All Users\Application Data\Git\config` | Windows XP
            **** `C:\ProgramData\Git\config` | Windows Vista & newer
            **** `-f` | `git config` command -> change it specifically

==== Your Identity

* == user name + email addres
    ** recommendations
        *** set it as soon as you install Git
    ** uses
        *** by every Git commit
            **** 👁️once you commit -> it's immutable 👁️
*
    ```
    git config --global user.name "John Doe"
    git config --global user.email johndoe@example.com
    git config --global -l  // Check it's set globally | your user
    ``

[[_editor]]
==== Your Editor

* == default text editor / -- will be used -- when Git needs you to type in a message
    ** if it's NOT configured -> Git uses your system's default editor
    ** _Example:_ Vim, Emacs and Notepad++
* `core.editor`
    ** _Example:_ if you want to use link:https://www.gnu.org/software/emacs/[Emacs text editor] -> `git config --global core.editor emacs`
    ** | Windows -> you -- must specify the -- full path to its executable file
        *** _Example:_ `git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin"`
    ** Check <<C-git-commands#ch_core_editor>>

[[_new_default_branch]]
==== Your default branch name

* _master_
    ** if you run `git init` (== create a new repository) -> default branch name
* `init.defaultBranch`
    ** allows
        *** specifying the default branch name
    ** requirements Git v2.28+
    ** _Example:_ `git config --global init.defaultBranch main`

==== Checking Your Settings

* `git config --list`
    ** allows
        *** checking your configuration settings | that point
    ** keys could be got from several times
        *** Reason: 🧠Git reads the same key from different files (check the 3 possible places before) / highest priority value is displayed 🧠
        *** -> pass `--show-origin` to get the origin -- _Example:_ `git config --show-origin user.name`
* `git config specificKey`
    ** display the value / highest priority
    ** _Example:_ `git config user.name`
